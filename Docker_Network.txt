Dockerネットワーク

Dockerを使ってネットワークの検証を行うために、複数のコンテナを起動し、各コンテナに対してIPアドレスを設定し、FRR（Free Range Routing）やOVS（Open vSwitch）などのネットワークツールをインストールして通信を確認することは可能です。
具体的には、docker-compose.ymlを使って複数のコンテナを管理し、それぞれに必要なツールをインストールしてネットワーク設定を行うことができます。
以下に、15個のコンテナを使ってネットワークの疎通を検証するための基本的なdocker-compose.ymlファイルと、コンテナ内で必要な設定を行う方法を示します。


手順と解説
コンテナのネットワーク設定: Docker Composeでは、同じネットワーク内のコンテナ同士が通信できるようになります。デフォルトのネットワークを使うこともできますが、複数のコンテナに個別のIPアドレスを指定したい場合は、カスタムネットワークを定義します。
FRRとOVSのインストール: 各コンテナには、FRR（ルーティング）やOVS（スイッチング）などのネットワークツールをインストールします。
疎通確認: 各コンテナにインストールされたツールを使って、疎通確認やルーティング設定を行います。

docker-compose.ymlの例

services:
  container1:
    image: ubuntu:20.04
    container_name: container1
    networks:
      custom_net:
        ipv4_address: 10.0.0.2
    command: /bin/bash -c "apt-get update && apt-get install -y iproute2 frr openvswitch-switch && tail -f /dev/null"

  container2:
    image: ubuntu:20.04
    container_name: container2
    networks:
      custom_net:
        ipv4_address: 10.0.0.3
    command: /bin/bash -c "apt-get update && apt-get install -y iproute2 frr openvswitch-switch && tail -f /dev/null"

  container3:
    image: ubuntu:20.04
    container_name: container3
    networks:
      custom_net:
        ipv4_address: 10.0.0.4
    command: /bin/bash -c "apt-get update && apt-get install -y iproute2 frr openvswitch-switch && tail -f /dev/null"

  # ここに必要な数だけコンテナを追加
  # container4, container5, ..., container15

networks:
  custom_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/24


説明
networksセクション:
custom_net というカスタムネットワークを定義しています。コンテナはこのネットワークに接続され、IPアドレスは手動で指定されます（例: 10.0.0.2、10.0.0.3 など）。
ipam セクションで、サブネット 10.0.0.0/24 を指定しています。これにより、各コンテナに個別のIPアドレスを割り当てます。


command セクション:
各コンテナが起動するときに、apt-get を使って iproute2（IPルーティングツール）、frr（Free Range Routing）、openvswitch-switch（Open vSwitch）をインストールします。これにより、各コンテナが必要なネットワークツールを持つことができます。
tail -f /dev/null はコンテナを終了させないためのダミーコマンドです。

FRRとOVSの設定例
FRRの設定: コンテナ内でFRRを設定し、ルーティングを管理します。例えば、OSPFを設定して、複数のコンテナ間でルーティングを行うことができます。
OVSの設定: Open vSwitch（OVS）を使って仮想スイッチを作成し、コンテナ間でのネットワークトラフィックを管理します。
例として、コンテナ内で以下のコマンドを使って、OVSの設定やFRRの設定を行うことができます。

# OVSブリッジの作成
ovs-vsctl add-br br0

# コンテナのネットワークインターフェースをOVSブリッジに接続
ovs-vsctl add-port br0 eth0

# FRRの設定ファイルを編集してルーティングプロトコルを設定
# 例: /etc/frr/frr.conf

コンテナ同士の疎通確認
コンテナ内で、ping や ip route コマンドを使ってネットワークの疎通確認を行います。例えば、コンテナ1からコンテナ2への疎通を確認するためには、次のコマンドを実行します。
# container1内で
ping 10.0.0.3
このように、Docker Composeを使って、複数のコンテナを立ち上げ、それらの間でネットワークの設定や疎通確認を行うことができます。さらに、必要に応じてFRRやOVSを利用して、より高度なネットワーク設定を行うこともできます。

